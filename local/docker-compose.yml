version: "3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.1
    container_name: demo-zookeeper
    networks:
      - local_default
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
    ports:
      - 2182:2182

  kafka:
    image: confluentinc/cp-kafka:5.5.1
    container_name: demo-kafka
    depends_on:
      - zookeeper
    networks:
      - local_default
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2182
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093
      KAFKA_SCHEMA_REGISTRY_URL: "schemaregistry:8084"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    ports:
      - 9093:9093
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

#  schemaregistry:
#    image: confluentinc/cp-schema-registry:5.5.1
#    container_name: demo-schemaregistry
#    depends_on:
#      - zookeeper
#    networks:
#      - local_default
#    environment:
#      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2182"
#      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
#      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8084"
#    ports:
#      - 8084:8084

  restproxy:
    image: confluentinc/cp-kafka-rest:5.5.1
    container_name: demo-restproxy
    depends_on:
      - kafka
    networks:
      - local_default
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: "zookeeper:2182"
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schemaregistry:8084"
      KAFKA_REST_HOST_NAME: restproxy
      KAFKA_REST_BOOTSTRAP_SERVERS: "kafka:9093"
    ports:
      - 8082:8082

#  connect:
#    image: confluentinc/cp-kafka-connect:5.5.1
#    container_name: demo-connect
#    depends_on:
#      - zookeeper
#      - kafka
#      - schemaregistry
#    ports:
#      - "8083:8083"
#    networks:
#      - local_default
#      - db_default
#    environment:
#      CONNECT_BOOTSTRAP_SERVERS: "kafka:9093"
#      CONNECT_REST_PORT: 8083
#      CONNECT_GROUP_ID: compose-connect-group
#      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
#      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
#      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
#      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
#      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schemaregistry:8084"
#      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
#      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schemaregistry:8084"
#      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
#      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
#      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
#      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
#      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
#      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
#      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
#      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
#      CONNECT_PLUGIN_PATH: "/usr/share/java,/etc/kafka-connect/jars/,/etc/kafka-connect/custom-plugins"
#      CONNECT_CONFIG_PROVIDERS: "file"
#      CONNECT_CONFIG_PROVIDERS_FILE_CLASS: "org.apache.kafka.common.config.provider.FileConfigProvider"
#    volumes:
#      - "../connectors/sink:/etc/kafka-connect/jars/"
#      - "../connectors/custom-plugins:/etc/kafka-connect/custom-plugins/"
#      - "../config:/config"
#      - "../secrets:/secrets"

  ksqldb-server:
    image: confluentinc/ksqldb-server:0.12.0
    hostname: ksqldb-server
    container_name: demo-ksqldb-server
    depends_on:
      - kafka
    ports:
      - "8089:8089"
    networks:
      - local_default
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8089
      KSQL_BOOTSTRAP_SERVERS: kafka:9093
      KSQL_KSQL_INTERNAL_TOPIC_REPLICAS: 1
      KSQL_KSQL_SINK_REPLICAS: 1
      KSQL_KSQL_STREAMS_REPLICATION_FACTOR: 1
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schemaregistry:8084"
      KSQL_KSQL_STREAMS_AUTO_OFFSET_RESET: "earliest"
      KSQL_KSQL_EXTENSION_DIR: "/etc/ksqldb/ext/"

  ksqldb-cli:
    image: confluentinc/ksqldb-cli:0.12.0
    container_name: demo-ksqldb-cli
    depends_on:
      - kafka
      - ksqldb-server
    networks:
      - local_default
    entrypoint: /bin/sh
    tty: true

networks:
  local_default:
